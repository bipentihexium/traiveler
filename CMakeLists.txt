cmake_minimum_required(VERSION 3.14.0)

project(TrAIveler VERSION 1.0.0 LANGUAGES C CXX)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/out/)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED true)

include(CheckIPOSupported)
check_ipo_supported(RESULT ltosupported OUTPUT ltoerror)

add_library(glad-lib ./libs/glad.c) # compile glad separately to supress pedantic warnings from it
target_include_directories(glad-lib PUBLIC ./include/)

add_executable(traiveler ./src/main.cpp ./src/app.cpp ./src/map.cpp ./src/character.cpp ./src/sound.cpp)
target_compile_definitions(traiveler PUBLIC GLM_FORCE_RADIANS=1)
target_include_directories(traiveler PUBLIC ./include/)
if(MINGW)
	target_link_directories(traiveler PUBLIC ./build/ ./libs/mingw/)
	target_link_libraries(traiveler PUBLIC glfw3 sfml-audio opengl32 gdi32 glad-lib ws2_32 wsock32)
elseif(WIN32)
	target_link_directories(traiveler PUBLIC ./build/ ./libs/win/)
	target_link_libraries(traiveler PUBLIC glfw3 sfml-audio opengl32 gdi32 glad-lib ws2_32 wsock32)
elseif(UNIX)
	target_link_directories(traiveler PUBLIC ./build/ ./libs/linux/)
	target_link_libraries(traiveler PUBLIC glfw3 sfml-audio glad-lib GL dl pthread X11)
endif()
if(MSVC)
	target_compile_options(traiveler PUBLIC /W4 /WX)
else()
	target_compile_options(traiveler PUBLIC -Wall -Wextra -Wpedantic)
	target_link_options(traiveler PUBLIC -Wall -Wextra -Wpedantic)
endif()
if (NOT CMAKE_BUILD_TYPE STREQUAL "Debug")
	if(ltosupported)
		message(STATUS "IPO / LTO enabled")
		set_property(TARGET traiveler PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)
	else()
		message(STATUS "IPO / LTO not supported: <${ltoerror}>")
	endif()
endif()
